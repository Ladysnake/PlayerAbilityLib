import net.fabricmc.loom.task.RemapJarTask

import java.time.Year

plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'io.github.ladysnake.chenille' version '0.9.0'
    id 'io.github.juuxel.loom-quiltflower' version "1.6.0"
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

chenille {
    configurePublishing {
        mainArtifact = remapJar.archiveFile
        withArtifactory()
        withCurseforgeRelease()
        withGithubRelease()
    }

    configureTestmod {
        withBaseTestRuns()
    }

    license = project.license_header
    javaVersion = 17
}

repositories {
    chenille.repositories.ladysnake()
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modLocalImplementation "io.github.ladysnake:elmendorf:${elmendorf_version}"
    api "org.jetbrains:annotations:19.0.0"
}

java {
    withSourcesJar()
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

task testmodJar(type: Jar, dependsOn: testmodClasses) {
    archiveBaseName = 'PalTest'
    archiveClassifier = 'dev'
    from(sourceSets.testmod.output) {
        include 'fabric.mod.json'
        expand 'version': project.version
    }
    from(sourceSets.testmod.output) {
        exclude 'fabric.mod.json'
    }
}

task remapTestmodJar(type: RemapJarTask, dependsOn: project.testmodJar) {
    archiveBaseName = 'PalTest'
    input = testmodJar.archiveFile
    addNestedDependencies = false
}

build.dependsOn(remapTestmodJar)
